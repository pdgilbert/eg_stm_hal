#  ROUGH SKETCH. THIS NEEDS WORK
name: Examples

on:
  push:
    branches: [ master]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path boards/bluepill/Cargo.toml -- --check

  test_examples:
    name: eg
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        mcu: [stm32f030xc, stm32f100, stm32f101, stm32f103, stm32f303xc, ]
              #stm32f042,    stm32f401, stm32f411,   stm32h742, stm32l0x2, stm32l100, stm32l151, stm32l4x2, ]
        eg:  [lora_spi_send, lora_spi_receive, lora_spi_gps ]
        include:
           #- mcu:  stm32f042
           #  hal: "stm32f0xx"
           #  trg: "thumbv6m-none-eabi"
           #  brd: "none-stm32f042"
           - mcu:  stm32f030xc
             hal: "stm32f0xx"
             trg: "thumbv6m-none-eabi"   
             brd: "none-stm32f030"
           - mcu:  stm32f100
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
             brd: "none-stm32f100"
           - mcu:  stm32f101
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
             brd: "none-stm32f101"
           - mcu:  stm32f103
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
             brd: "bluepill"
           - mcu:  stm32f303xc
             hal: "stm32f3xx"
             trg: "thumbv7em-none-eabihf"
             brd: "discovery-stm32f303"
           #- mcu:  stm32f401
           #  hal: "stm32f4xx"
           #  trg: "thumbv7em-none-eabihf"
           #  brd: 
           #- mcu:  stm32f411
           #  hal: "stm32f4xx"
           #  trg: "thumbv7em-none-eabihf"
           #- mcu:  stm32h742             
           #  hal: "stm32h7xx"
           #  trg: "thumbv7em-none-eabihf"
           #- mcu:  stm32l0x2
           #  hal: "stm32l0xx"
           #  trg: "thumbv6m-none-eabi"
           #- mcu:  stm32l100
           #  hal: "stm32l1xx"
           #  trg: "thumbv7m-none-eabi"
           #- mcu:  stm32l151
           #  hal: "stm32l1xx"
           #  trg: "thumbv7m-none-eabi"
           #- mcu:  stm32l4x2
           #  hal: "stm32l4xx"
           #  trg: "thumbv7em-none-eabi"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1 
        with:
          command: build
          args:  --manifest-path boards/${{ matrix.brd }}/Cargo.toml --no-default-features --release --target ${{ matrix.trg }} --features ${{ matrix.mcu }}
          use-cross: true
        #env:
         #  BRD: ${{ matrix.brd }}
         #  TRG: ${{ matrix.trg }}
        #   MCU: ${{ matrix.mcu }}
        #run: |
        #   cd boards/${BRD}
        #   cargo build --no-default-features --release --target ${TRG} --features ${MCU}
        # possibly uses in place of run, but need to set working-directory: 
        # following https://github.com/actions-rs/cargo/issues/6  add --manifest-path 
      - name: Build example 
        uses: actions-rs/cargo@v1
        with:
          command: build
          args:  --manifest-path boards/${{ matrix.brd }}/Cargo.toml --no-default-features --release --target ${{ matrix.trg }} --features ${{ matrix.hal }},${{ matrix.mcu }} --example ${{ matrix.eg }}
          use-cross: true

