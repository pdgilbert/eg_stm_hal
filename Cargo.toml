[package]
name = "eg_stm_hal"
version = "0.2.0"
authors = ["Paul Gilbert <pdgilbert@users.noreply.github.com>"]
edition = "2018"
repository = "https://github.com/pdgilbert/eg_stm_hal"
#documentation = "https://"
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# name = "whatever"  #lib name defaults to package name
# for most package the path to the lib would be
#path = "src/lib.rs"
# for the setup here "src/lib.rs" works if there is a link src/  --> ../../src/  
# but  "../../src/lib.rs" works without the link.
path = "../../src/lib.rs"
# A flag for enabling unit tests for this target. This is used by `cargo test`.
test = true

[[example]]
name = "blink"
path = "examples/blink.rs"

[[example]]
name = "echo_by_char"
path = "examples/echo_by_char.rs"

[[example]]
name = "echo_string"
path = "examples/echo_string.rs"

[[example]]
name = "serial_char"
path = "examples/serial_char.rs"

[[example]]
name = "serial_string"
path = "examples/serial_string.rs"

[[example]]
name = "gps_rw"
path = "examples/gps_rw.rs"

[[example]]
name = "temperature"
path = "examples/temperature.rs"


[dependencies]
#cortex-m            = { version = ">=0.7.1", optional = true }
cortex-m             = { version = ">=0.6.4" } # optional breaks blink for stm32f0xx
nb                   = { version = ">=0.1.2" }
cortex-m-rt          = { version = ">=0.6.8" }
panic-reset          = { version = ">=0.1.0" }
panic-halt           = { version = ">=0.2.0" }

rtt-target = { version =  "0.2.2", features = ["cortex-m"] }

embedded-hal = { version = "0.2.4" }

stm32f0xx-hal = { git = "https://github.com/stm32-rs/stm32f0xx-hal", optional = true }
stm32f1xx-hal = { git = "https://github.com/stm32-rs/stm32f1xx-hal", optional = true }
stm32f3xx-hal = { git = "https://github.com/stm32-rs/stm32f3xx-hal", optional = true }
stm32f4xx-hal = { git = "https://github.com/stm32-rs/stm32f4xx-hal", optional = true }
stm32f7xx-hal = { git = "https://github.com/stm32-rs/stm32f7xx-hal", optional = true }
stm32h7xx-hal = { git = "https://github.com/stm32-rs/stm32h7xx-hal", optional = true }
stm32l0xx-hal = { git = "https://github.com/stm32-rs/stm32l0xx-hal", optional = true }
stm32l1xx-hal = { git = "https://github.com/stm32-rs/stm32l1xx-hal", optional = true, default-features = false}
stm32l4xx-hal = { git = "https://github.com/stm32-rs/stm32l4xx-hal", optional = true }

# for bugs and unusual return values in some hals
void          = { version = ">=1.0.2", default-features = false }

[features]
stm32f0xx = []
stm32f1xx = []
stm32f3xx = []
stm32f4xx = []
stm32f7xx = []
stm32h7xx = []
stm32l0xx = []
stm32l1xx = []
stm32l4xx = []
#device-selected = []
#doc = []
stm32f030xc = ["stm32f0xx-hal/stm32f030xc", "stm32f0xx-hal/rt"]
stm32f042   = ["stm32f0xx-hal/stm32f042",   "stm32f0xx-hal/rt"]
stm32f100 = ["stm32f1xx-hal/stm32f100", "stm32f1xx-hal/rt"]
stm32f101 = ["stm32f1xx-hal/stm32f101", "stm32f1xx-hal/rt"]
stm32f103 = ["stm32f1xx-hal/stm32f103", "stm32f1xx-hal/rt"]
stm32f303xc = ["stm32f3xx-hal/stm32f303xc", "stm32f3xx-hal/rt"] 
stm32f401 = ["stm32f4xx-hal/stm32f401", "stm32f4xx-hal/rt"] 
stm32f405 = ["stm32f4xx-hal/stm32f405", "stm32f4xx-hal/rt"] 
stm32f411 = ["stm32f4xx-hal/stm32f411", "stm32f4xx-hal/rt"] 
stm32f722 = ["stm32f7xx-hal/stm32f722", "stm32f7xx-hal/rt"] 
stm32h742 = ["stm32h7xx-hal/stm32h742", "stm32h7xx-hal/rt"]
# see https://www.st.com/resource/en/datasheet/stm32l072v8.pdf  p12 for some MCU variants
stm32l0x2 =     ["stm32l0xx-hal/stm32l0x2", "stm32l0xx-hal/rt", "stm32l0xx-hal/mcu-STM32L072KZTx"]
stm32l072kztx = ["stm32l0xx-hal/stm32l0x2", "stm32l0xx-hal/rt", "stm32l0xx-hal/mcu-STM32L072KZTx"]
stm32l0x1 = ["stm32l0xx-hal/stm32l0x1", "stm32l0xx-hal/rt", "stm32l0xx-hal/mcu-STM32L071KBTx"]
stm32l100 = ["stm32l1xx-hal/stm32l100", "stm32l1xx-hal/rt"]
stm32l151 = ["stm32l1xx-hal/stm32l151", "stm32l1xx-hal/rt"]
stm32l4x1 = ["stm32l4xx-hal/stm32l4x1", "stm32l4xx-hal/rt"]
stm32l4x2 = ["stm32l4xx-hal/stm32l4x2", "stm32l4xx-hal/rt"]
stm32l4x6 = ["stm32l4xx-hal/stm32l4x6", "stm32l4xx-hal/rt"]


[dev-dependencies]
cortex-m-semihosting = { version = ">=0.3.3" }
panic-semihosting    = { version = ">=0.5.2" }
heapless = ">=0.7"

## Devices with 64 or 128 Kb ROM
#medium = []
## Devices with 256 or 512 Kb ROM
#high = ["medium"]
## Devices with 768 Kb ROM or more
#xl = ["high"]

[profile.dev]
incremental = false
codegen-units = 1

[profile.release]
codegen-units = 1
debug = true
lto = true

